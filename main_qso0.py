#!/usr/bin/env python

# Generate lightcone for DESI mocks
# from HOD catalogues generated by Shadab

import argparse

from generate_lc import LC, Paths_LC
from foot_nz import FOOT_NZ

from combine_shells_fits import convert




def qso_cutsky_EZmock(args):
	galtype = "QSO"
	redshift = "z1.400"
	in_fol_temp = "EZmock_B2000G512Z1.4N1014636_b0.053d1.13r0c0.6_seed"

	config_file = f"./EZmock/config/config_EZmock_{galtype}.ini"

	######### Instances
	lc_instance = LC(config_file, args)
	foot_nz_instance = FOOT_NZ(config_file, args, galtype=galtype)

	######### CutSky 20
	for i in range(2, 501):
		phase = str(int(i))
		input_name = "{}seed" + phase + ".sub{}.fits.gz"
		output_name = "{}seed" + phase + ".sub{}"
		in_part_path = f"/{redshift}/{in_fol_temp}{phase}/"
		shells_path = f"/{redshift}/{in_fol_temp}{phase}/"
		path_instance = Paths_LC(config_file, args, in_part_path, input_name, shells_path, output_name)

		lc_instance.generate_shells(path_instance, snapshot="", cutsky=True, nproc=20, Nsubboxes=64)

		foot_nz_instance.shell(path_instance, nproc=64, todo=3)

		out_fits = path_instance.dir_out + f"/{redshift}/fits/cutsky_{galtype}_{redshift}_{in_fol_temp}{phase}.fits"
		convert(inpath=path_instance.shells_out_path, out_file=out_fits, galtype=galtype, boxL=foot_nz_instance.boxL)


def main():
	parser = argparse.ArgumentParser()
	# parser.add_argument("config", help="ini file holding configuration", type=str)
	parser.add_argument("--dir_out", type=str, help="output directory (overrides config file)")
	parser.add_argument("--dir_gcat", type=str, help="input directory (same)")
	parser.add_argument("--input_name", type=str, help="name of input catalogs (same)")
	args = parser.parse_args()
	# config_file = str(args.config) # config file

	qso_cutsky_EZmock(args)


	
if __name__ == '__main__':
	main()
